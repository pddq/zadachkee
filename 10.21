/*Дана строка, состоящая из русских слов, разделенных пробелами (одним
или несколькими). Вывести строку, содержащую эти же слова (разделенные
одним пробелом), но расположенные в алфавитном порядке (по начальным
буквам).*/


#include <iostream>
#include <locale>
#include <string>
using namespace std;
int main() {
locale::global(locale(""));
int i, j, jj, l, m;
i=j=l=m=0;
wchar_t s1 [40] = {};
wstring s = L"я люблю  писять   в чяй и есть щябуреки";
wchar_t s2 [2]= {};
wchar_t s3 [40] = {};
wcout<<s<<endl;

while(s[i]!='\0'){  //записываю в строку s1 перыве буквы слов, чтоб потом их отсортировать
	if(s[i]!=' ' && s[i-1]==' ' || s[i]!=' ' && i==0){
		s1[j]=s[i];
		j++;
	}
	s1[j]='\0';
	i++; 
} 

i=0;

wcout<<s1<<endl;

while(l!=1){ //сортирую буковки
	if(s1[i+1]!='\0'){
		if((int)s1[i]>(int)s1[i+1]){
			s2[0]=s1[i];
			s1[i]=s1[i+1];
			s1[i+1]=s2[0];
			m=1;
		}
	}
	if(s1[i]=='\0'){
		i=0;
		if(m==0){
			l=1;
		}
		m=0;
	}
	else {
		i++;
	}
}

i=0;


wcout<<s1<<endl;

j=0;
l=0;
jj=0;
while(s1[jj]!='\0'){  //ищу слова в s по первым буковкам из строки s1 и записываю в строку s3
	if(s[i]!=' ' && s[i-1]==' ' || s[i]!=' ' && i==0){
		if(s[i]==s1[jj]){	
			j=i;
			while(s[j]!=' ' && s[j]!='\0'){
				s3[l]=s[j];
				j++;
				l++;
			}
			s3[l]=' ';
			l++;
			jj++;
		}
	}
	i++; 
	if(s[i]=='\0'){
		i=0;
	}
}
wcout<<s3<<endl;
}
