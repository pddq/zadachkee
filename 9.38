/*Дана квадратная матрица целых чисел. Упорядочить все элементы на
главной диагонали матрицы и на всех параллельных диагоналях в порядке
неубывания сверху вниз.*/


#include <iostream>
using namespace std;

int main() {
setlocale(LC_ALL, "Russian");

int n, k, a, l, ii, h;

n = 5;
k = 0;
l = 0;
ii = 0;
h = 0;

int m[n][n] = {{4,2,3,4,2},{4,7,7,4,1},{1,2,3,4,3},{1,8,8,8,9},{7,6,5,2,3}};
int m1[(n*2)-1][n] = {};


for(int i = 0; i<n; i++){              //здесь записываю диагонали в массив m1, с справого верхнего угла. всего строк в m1 будет (n*2)-1
	for(int j = 0; j<n; j++){
		for(int h = 0; h<((n*2)-1)/2; h++){   
			if(j==((n-1)-h)+i){   //для диагоналей, которые выше главной диагонали
				m1[h][j]=m[i][j]; 	
			}
			if(i==((n-1)-h)+j){   //для диагоналей, которые ниже главной диагонали
				m1[((n*2)-1)-1-h][j]=m[i][j]; 		
			}
		}
		
		if(j==i){
			m1[((n*2)-1)/2][j]=m[i][j]; 
		}
		

		if(j==n-1){
			cout << m[i][j] <<endl;    
		}

		else {
			cout << m[i][j] <<" ";
		}
	}
}


while(l>=0){  
	if(m1[ii][l]<m1[ii][l+1]){
		a=m1[ii][l];
		m1[ii][l]=m1[ii][l+1];
		m1[ii][l+1]=a;
		k=1;
	}
	l++;
	
	if(l+1>n-1){
		l=0; 
		if(k==0){
			if(ii==(n*2)-1){
				break;}
			else {ii++;}
		}
	k=0;
	}
}


cout<<endl;

for(int i = 0; i<n; i++){
	for(int j = 0; j<n; j++){
		for(int h = 0; h<((n*2)-1)/2; h++){
			if(j==((n-1)-h)+i){
				m[i][j]=m1[h][i]; 	
			}
			if(i==((n-1)-h)+j){
				m[i][j]=m1[((n*2)-1)-1-h][j]; 		
			}
		}

		if(j==i){
			m[i][j]=m1[((n*2)-1)/2][j]; 
		}
	}
}



for(int i = 0; i<n; i++){
	for(int j = 0; j<n; j++){
		if(j==n-1){
			cout << m[i][j] <<endl;
		}
		else {
			cout << m[i][j] <<" ";
		}
	}
}



}
